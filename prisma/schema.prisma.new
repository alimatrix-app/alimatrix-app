// Zoptymalizowany i uzupełniony schemat bazy danych dla AliMatrix
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EmailSubscription {
  id                String           @id @default(cuid())
  email             String           @unique
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  submittedAt       DateTime?
  acceptedTerms     Boolean          @default(false)
  acceptedContact   Boolean          @default(false)
  status            String           @default("pending") // pending, verified, submitted
  verificationToken String?
  verifiedAt        DateTime?
  formSubmissions   FormSubmission[]

  @@index([status])
}

model FormSubmission {
  id                  String            @id @default(cuid())
  emailSubscriptionId String
  emailSubscription   EmailSubscription @relation(fields: [emailSubscriptionId], references: [id])
  formData            Json // Pełne dane formularza w JSON
  submittedAt         DateTime          @default(now())
  processedAt         DateTime?
  status              String            @default("pending") // pending, processed
  reportUrl           String?

  // Główne informacje o formularzu
  sciezkaWybor        String? // established, not-established
  podstawaUstalen     String? // postanowienie-zabezpieczajace, wyrok-rozwodowy, porozumienie-sad, porozumienie-mediacja, porozumienie-prywatne, inne
  podstawaUstalenInne String? // Szczegóły dla opcji "inne"
  wariantPostepu      String? // court, agreement, other
  sposobFinansowania  String? // i-pay, i-receive, shared

  // Dane demograficzne
  plecUzytkownika            String?
  wiekUzytkownika            String?
  wojewodztwoUzytkownika     String?
  miejscowoscUzytkownika     String?
  stanCywilnyUzytkownika     String?
  plecDrugiegoRodzica        String?
  wiekDrugiegoRodzica        String?
  wojewodztwoDrugiegoRodzica String?
  miejscowoscDrugiegoRodzica String?
  
  // Dane użytkownika - dodatkowe pola
  adresUlica                 String? // Adres - ulica
  adresKodPocztowy           String? // Adres - kod pocztowy
  adresMiasto                String? // Adres - miasto
  pesel                      String? // PESEL (szyfrowanie powinno być zaimplementowane na poziomie aplikacji)
  telefon                    String? // Numer telefonu
  statusZatrudnienia         String? // Status zatrudnienia (powinno być ENUM w przyszłych wersjach)
  dochodMiesieczny           Float?  // Dochód miesięczny
  
  // Dane sądowe
  rodzajSaduSad              String? // rejonowy, okregowy, nie_pamietam
  apelacjaSad                String? // ID apelacji (kompatybilność wsteczna)
  apelacjaId                 String? // ID apelacji 
  apelacjaNazwa              String? // Nazwa apelacji
  sadOkregowyId              String? // ID sądu okręgowego
  sadOkregowyNazwa           String? // Nazwa sądu okręgowego
  sadRejonowyId              String? // ID sądu rejonowego
  sadRejonowyNazwa           String? // Nazwa sądu rejonowego
  rokDecyzjiSad              String? // Rok decyzji sądu
  miesiacDecyzjiSad          String? // Miesiąc decyzji sądu
  dataDecyzjiSad             String? // Pełna data decyzji
  liczbaSedzi                String? // jeden, trzech
  plecSedziego               String? // kobieta, mezczyzna
  inicjalySedziego           String? // Inicjały sędziego
  czyPozew                   String? // tak, nie
  watekWiny                  String? // nie, tak-ja, tak-druga-strona, tak-oboje
  
  // Dodane szczegółowe pola dot. sądu
  imieSedziego               String? // Imię sędziego
  nazwiskoSedziego           String? // Nazwisko sędziego
  typReprezentacji           String? // Typ reprezentacji (np. adwokat, radca prawny, samodzielnie)
  imieReprezentanta          String? // Imię reprezentanta
  nazwiskoReprezentanta      String? // Nazwisko reprezentanta
  kosztReprezentacji         Float?  // Koszt reprezentacji
  dataRozprawy               DateTime? // Data rozprawy
  dataZlozeniaPozwu          DateTime? // Data złożenia pozwu
  liczbaRozpraw              Int?    // Liczba rozpraw

  // Dane porozumienia
  dataPorozumienia           String?
  sposobPorozumienia         String?
  formaPorozumienia          String?
  klauzulaWaloryzacyjna      String?

  // Dane ustaleń innych
  dataUstalenInnych       String?
  uzgodnienieFinansowania String?
  planyWystapieniaDoSadu  String?

  // Oceny adekwatności
  ocenaAdekwatnosciSad          Float?
  ocenaAdekwatnosciPorozumienie Float?
  ocenaAdekwatnosciInne         Float?

  // Powiązane dane
  liczbaDzieci        Int?
  dzieci              Child[]       // Relacja z dziećmi
  dochodyRodzicow     Dochody?      // Relacja z dochodami
  kosztyUtrzymania    KosztyUtrzymania? // Relacja z kosztami utrzymania
  
  @@index([status])
  @@index([emailSubscriptionId])
  @@index([rodzajSaduSad])
  @@index([apelacjaSad])
  @@index([apelacjaId])
  @@index([sadOkregowyId])
  @@index([sadRejonowyId])
  @@index([rokDecyzjiSad])
  @@index([sposobFinansowania])
  @@index([podstawaUstalen])
}

// Model dziecka (rozszerzony)
model Child {
  id                     String         @id @default(cuid())
  formSubmissionId       String
  formSubmission         FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)
  childId                Int // ID dziecka w obrębie formularza (1, 2, 3, ...)
  wiek                   Int?
  plec                   String? // K, M, I
  specjalnePotrzeby      Boolean        @default(false)
  opisSpecjalnychPotrzeb String?
  uczeszczeDoPlacowki    Boolean?
  typPlacowki            String? // zlobek, przedszkole, podstawowa, ponadpodstawowa
  opiekaInnejOsoby       Boolean?
  modelOpieki            String? // 50/50, inny
  cyklOpieki             String? // 1, 2, 4, custom
  procentCzasuOpieki     Float?

  // Dodane pola edukacyjne
  poziomEdukacji         String?  // Szczegółowy poziom edukacyjny
  kosztySzkoly           Float?   // Koszty opłat za szkołę/przedszkole
  dodatkZajeciaCena      Float?   // Koszty dodatkowych zajęć
  rodzajZajec            String?  // Opis rodzaju zajęć dodatkowych
  szczegolowyProcentCzasu Json?   // Dokładny podział procentowy opieki dla poszczególnych dni

  // Dane o kosztach utrzymania dziecka
  kwotaAlimentow         Float?
  twojeMiesieczneWydatki Float?
  wydatkiDrugiegoRodzica Float?
  kosztyUznanePrzezSad   Float?

  // Inne źródła utrzymania dziecka
  rentaRodzinna                 Boolean @default(false)
  rentaRodzinnaKwota            Float?
  swiadczeniePielegnacyjne      Boolean @default(false)
  swiadczeniePielegnacyjneKwota Float?
  inneZrodla                    Boolean @default(false)
  inneZrodlaOpis                String?
  inneZrodlaKwota               Float?
  brakDodatkowychZrodel         Boolean @default(true)

  // Dane o czasie opieki
  tabelaCzasu            Json? // Szczegółowe dane o tabeli czasu w formacie JSON
  wskaznikiCzasuOpieki   Json? // Wskaźniki czasu opieki w formacie JSON
  wakacjeProcentCzasu    Float?
  wakacjeSzczegolowyPlan Boolean @default(false)
  wakacjeOpisPlan        String?

  @@unique([formSubmissionId, childId])
  @@index([formSubmissionId])
}

// Model dochodów rodziców
model Dochody {
  id               String         @id @default(cuid())
  formSubmissionId String         @unique
  formSubmission   FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)

  // Dochody wypełniającego
  wlasneDochodyNetto          Float?
  wlasnePotencjalDochodowy    Float?
  wlasneKosztyUtrzymania      Float?
  wlasneKosztyInni            Float?
  wlasneDodatkoweZobowiazania Float?

  // Dochody drugiego rodzica
  drugiRodzicDochody    Float?
  drugiRodzicPotencjal  Float?
  drugiRodzicKoszty     Float?
  drugiRodzicKosztyInni Float?
  drugiRodzicDodatkowe  Float?
}

// Nowy model kosztów utrzymania - szczegółowe wartości
model KosztyUtrzymania {
  id                  String         @id @default(cuid())
  formSubmissionId    String         @unique
  formSubmission      FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)
  
  // Agregowane koszty (dla kompatybilności wstecznej)
  kosztyUtrzymania    Float?  // Łączne koszty utrzymania
  czynsz              Float?  // Czynsz/rata kredytu
  media               Float?  // Łączne media (agregacja)
  
  // Szczegółowe koszty mediów
  energia             Float?  // Energia elektryczna
  woda                Float?  // Woda
  ogrzewanie          Float?  // Ogrzewanie
  internet            Float?  // Internet
  telefon             Float?  // Telefon
  
  // Inne koszty
  transport           Float?  // Koszty transportu
  zywnosc             Float?  // Koszty żywności
  lekarstwa           Float?  // Koszty lekarstw
  
  // Dodatkowe informacje o mieszkaniu  
  typZamieszkania     String? // Własność, wynajem, mieszkanie komunalne, rodzinne, etc.
  czestotliwoscOplat  String? // Miesięcznie, kwartalnie, rocznie
  powierzchniaMieszkania Float? // Powierzchnia mieszkania w m²
  liczbaOsob          Int?    // Liczba osób w gospodarstwie domowym
  
  // Inne informacje o wydatkach
  inneKosztyMiesieczne Float? // Inne miesięczne koszty
  inneKosztyOpis      String? // Opis innych kosztów
}
