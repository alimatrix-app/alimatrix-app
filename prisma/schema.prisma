generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EmailSubscription {
  id                String           @id @default(cuid())
  email             String           @unique
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  acceptedTerms     Boolean          @default(false)
  status            String           @default("pending")
  verificationToken String?
  verifiedAt        DateTime?
  acceptedContact   Boolean          @default(false)
  submittedAt       DateTime?
  formSubmissions   FormSubmission[]

  @@index([status])
}

model FormSubmission {
  id                            String            @id @default(cuid())
  emailSubscriptionId           String
  formData                      Json
  submittedAt                   DateTime          @default(now())
  processedAt                   DateTime?
  status                        String            @default("pending")
  reportUrl                     String?
  rodzajSaduSad                 String?
  apelacjaSad                   String?
  sadOkregowyId                 String?
  rokDecyzjiSad                 String?
  watekWiny                     String?
  sciezkaWybor                  String?
  podstawaUstalen               String?
  podstawaUstalenInne           String?
  wariantPostepu                String?
  sposobFinansowania            String?
  plecUzytkownika               String?
  wiekUzytkownika               String?
  wojewodztwoUzytkownika        String?
  miejscowoscUzytkownika        String?
  stanCywilnyUzytkownika        String?
  plecDrugiegoRodzica           String?
  wiekDrugiegoRodzica           String?
  wojewodztwoDrugiegoRodzica    String?
  miejscowoscDrugiegoRodzica    String?
  sadRejonowyId                 String?
  dataDecyzjiSad                String?
  miesiacDecyzjiSad             String?
  liczbaSedzi                   String?
  plecSedziego                  String?
  inicjalySedziego              String?
  czyPozew                      String?
  dataPorozumienia              String?
  sposobPorozumienia            String?
  formaPorozumienia             String?
  klauzulaWaloryzacyjna         String?
  dataUstalenInnych             String?
  uzgodnienieFinansowania       String?
  planyWystapieniaDoSadu        String?
  ocenaAdekwatnosciSad          Float?
  ocenaAdekwatnosciPorozumienie Float?
  ocenaAdekwatnosciInne         Float?
  liczbaDzieci                  Int?
  apelacjaId                    String?
  apelacjaNazwa                 String?
  sadOkregowyNazwa              String?
  sadRejonowyNazwa              String?
  adresUlica                    String?
  adresKodPocztowy              String?
  adresMiasto                   String?
  pesel                         String?
  telefon                       String?
  statusZatrudnienia            String?
  dochodMiesieczny              Decimal?          @db.Decimal(10, 2)
  imieSedziego                  String?
  nazwiskoSedziego              String?
  typReprezentacji              String?
  imieReprezentanta             String?
  nazwiskoReprezentanta         String?
  kosztReprezentacji            Decimal?          @db.Decimal(10, 2)
  dataRozprawy                  DateTime?         @db.Timestamp(6)
  dataZlozeniaPozwu             DateTime?         @db.Timestamp(6)
  liczbaRozpraw                 Int?
  dzieci                        Child[]
  dochodyRodzicow               Dochody?
  emailSubscription             EmailSubscription @relation(fields: [emailSubscriptionId], references: [id])


  @@index([status])
  @@index([emailSubscriptionId])
  @@index([rodzajSaduSad])
  @@index([apelacjaSad])
  @@index([apelacjaId])
  @@index([sadOkregowyId])
  @@index([sadRejonowyId])
  @@index([rokDecyzjiSad])
  @@index([sposobFinansowania])
  @@index([podstawaUstalen])
}

model Child {
  id                            String         @id @default(cuid())
  formSubmissionId              String
  childId                       Int
  wiek                          Int?
  plec                          String?
  specjalnePotrzeby             Boolean        @default(false)
  opisSpecjalnychPotrzeb        String?
  uczeszczeDoPlacowki           Boolean?
  typPlacowki                   String?
  opiekaInnejOsoby              Boolean?
  modelOpieki                   String?
  cyklOpieki                    String?
  procentCzasuOpieki            Float?
  kwotaAlimentow                Float?
  twojeMiesieczneWydatki        Float?
  wydatkiDrugiegoRodzica        Float?
  kosztyUznanePrzezSad          Float?
  rentaRodzinna                 Boolean        @default(false)
  rentaRodzinnaKwota            Float?
  swiadczeniePielegnacyjne      Boolean        @default(false)
  swiadczeniePielegnacyjneKwota Float?
  inneZrodla                    Boolean        @default(false)
  inneZrodlaOpis                String?
  inneZrodlaKwota               Float?
  brakDodatkowychZrodel         Boolean        @default(true)
  tabelaCzasu                   Json?
  wskaznikiCzasuOpieki          Json?
  wakacjeProcentCzasu           Float?
  wakacjeSzczegolowyPlan        Boolean        @default(false)
  wakacjeOpisPlan               String?
  procentCzasuAktywnejOpieki    Float?
  procentCzasuOpiekiBezEdukacji Float?
  procentCzasuSnu               Float?
  poziomEdukacji                String?
  kosztySzkoly                  Decimal?       @db.Decimal(10, 2)
  dodatkZajeciaCena             Decimal?       @db.Decimal(10, 2)
  rodzajZajec                   String?
  szczegolowyProcentCzasu       Json?
  formSubmission                FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)

  @@unique([formSubmissionId, childId])
  @@index([formSubmissionId])
}

model Dochody {
  id                          String         @id @default(cuid())
  formSubmissionId            String         @unique
  wlasneDochodyNetto          Float?
  wlasnePotencjalDochodowy    Float?
  wlasneKosztyUtrzymania      Float?
  wlasneKosztyInni            Float?
  wlasneDodatkoweZobowiazania Float?
  drugiRodzicDochody          Float?
  drugiRodzicPotencjal        Float?
  drugiRodzicKoszty           Float?
  drugiRodzicKosztyInni       Float?
  drugiRodzicDodatkowe        Float?
  formSubmission              FormSubmission @relation(fields: [formSubmissionId], references: [id], onDelete: Cascade)
}

