"use client";

import { useState, useEffect } from "react";
import { Dialog } from "@headlessui/react";
import { motion } from "framer-motion";
import { Bars3Icon, XMarkIcon } from "@heroicons/react/24/outline";

const navigation = [
  { name: "Alimenty", href: "#" },
  { name: "Kalkulator", href: "#" },
  { name: "Dla prawników", href: "#" },
  { name: "O nas", href: "#" },
];

const features = [
  {
    name: "Precyzyjne obliczenia",
    description: "Algorytm uwzględniający najnowsze przepisy i orzecznictwo",
    icon: (props: React.SVGProps<SVGSVGElement>) => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        {...props}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M12 3v17.25m0 0c-1.472 0-2.882.265-4.185.75M12 20.25c1.472 0 2.882.265 4.185.75M18.75 4.97A48.416 48.416 0 0 0 12 4.5c-2.291 0-4.545.16-6.75.47m13.5 0c1.01.143 2.01.317 3 .52m-3-.52 2.25 2.25m-15 0 2.25-2.25m0 0A48.667 48.667 0 0 1 12 7.5c2.291 0 4.545.16 6.75.47a48.902 48.902 0 0 1-3 13.5M6.75 15a48.667 48.667 0 0 0 6.75-.75m-6.75.75a48.667 48.667 0 0 1 6.75-13.5"
        />
      </svg>
    ),
  },
  {
    name: "Pełna dokumentacja",
    description: "Automatyczne generowanie wniosków i załączników",
    icon: (props: React.SVGProps<SVGSVGElement>) => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        {...props}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z"
        />
      </svg>
    ),
  },
  {
    name: "Inteligentna analiza",
    description: "Zaawansowane algorytmy AI wspierające proces decyzyjny",
    icon: (props: React.SVGProps<SVGSVGElement>) => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        strokeWidth={1.5}
        stroke="currentColor"
        {...props}
      >
        <path
          strokeLinecap="round"
          strokeLinejoin="round"
          d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09Z"
        />
      </svg>
    ),
  },
];

export default function HeroPage() {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [scrolled, setScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  return (
    <div className="relative bg-white">
      {/* Background gradient animations */}
      <div className="absolute inset-0 -z-10 overflow-hidden">
        <motion.div
          className="absolute inset-0 bg-gradient-to-br from-blue-50 to-white"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.8 }}
        />
        <motion.div
          className="absolute top-[-10%] right-[-5%] h-[500px] w-[500px] rounded-full bg-gradient-to-r from-indigo-300/30 to-sky-300/30 blur-3xl"
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 1.5, delay: 0.2 }}
        />
        <motion.div
          className="absolute bottom-[-5%] left-[-5%] h-[400px] w-[400px] rounded-full bg-gradient-to-r from-blue-200/30 to-cyan-200/30 blur-3xl"
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 1.5, delay: 0.5 }}
        />
        <svg
          className="absolute top-0 left-0 -translate-y-1/2 -z-10 hidden lg:block"
          width="100%"
          height="100%"
          viewBox="0 0 700 400"
          fill="none"
        >
          <defs>
            <pattern
              id="herogrid"
              width="40"
              height="40"
              patternUnits="userSpaceOnUse"
            >
              <rect width="100%" height="100%" fill="url(#smallgrid)" />
            </pattern>
            <pattern
              id="smallgrid"
              width="8"
              height="8"
              patternUnits="userSpaceOnUse"
            >
              <path
                d="M 8 0 L 0 0 0 8"
                fill="none"
                stroke="rgba(79, 70, 229, 0.05)"
                strokeWidth="0.5"
              />
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#herogrid)" />
        </svg>
      </div>

      {/* Header navigation */}
      <header
        className={`fixed inset-x-0 top-0 z-50 transition-all duration-300 ${
          scrolled ? "bg-white/80 backdrop-blur-md shadow-sm" : "bg-transparent"
        }`}
      >
        <nav
          aria-label="Global"
          className="flex items-center justify-between p-6 lg:px-12"
        >
          <div className="flex lg:flex-1">
            <a href="#" className="-m-1.5 p-1.5 flex items-center">
              <span className="sr-only">AliMatrix</span>
              <div className="flex items-center">
                <div className="h-8 w-8 rounded-lg bg-gradient-to-tr from-blue-600 to-indigo-600 flex items-center justify-center text-white font-bold text-lg">
                  A
                </div>
                <span className="ml-2 text-xl font-bold bg-gradient-to-r from-indigo-600 to-blue-500 bg-clip-text text-transparent">
                  AliMatrix
                </span>
              </div>
            </a>
          </div>
          <div className="flex lg:hidden">
            <button
              type="button"
              onClick={() => setMobileMenuOpen(true)}
              className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
            >
              <span className="sr-only">Otwórz menu</span>
              <Bars3Icon aria-hidden="true" className="h-6 w-6" />
            </button>
          </div>
          <div className="hidden lg:flex lg:gap-x-10">
            {navigation.map((item) => (
              <a
                key={item.name}
                href={item.href}
                className="text-sm/6 font-semibold text-gray-700 hover:text-indigo-600 transition"
              >
                {item.name}
              </a>
            ))}
          </div>
          <div className="hidden lg:flex lg:flex-1 lg:justify-end gap-x-6">
            <a
              href="#"
              className="text-sm/6 font-semibold text-gray-700 hover:text-indigo-600 transition"
            >
              Logowanie
            </a>
            <a
              href="#"
              className="text-sm/6 font-semibold text-white bg-indigo-600 hover:bg-indigo-500 px-4 py-2 rounded-lg transition-all shadow-sm hover:shadow-md"
            >
              Rozpocznij kalkulację
            </a>
          </div>
        </nav>
        <Dialog
          as="div"
          className="lg:hidden"
          open={mobileMenuOpen}
          onClose={setMobileMenuOpen}
        >
          <div className="fixed inset-0 z-50 bg-black/20 backdrop-blur-sm" />
          <Dialog.Panel className="fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
            <div className="flex items-center justify-between">
              <a href="#" className="-m-1.5 p-1.5">
                <span className="sr-only">AliMatrix</span>
                <div className="flex items-center">
                  <div className="h-8 w-8 rounded-lg bg-gradient-to-tr from-blue-600 to-indigo-600 flex items-center justify-center text-white font-bold text-lg">
                    A
                  </div>
                  <span className="ml-2 text-xl font-bold bg-gradient-to-r from-indigo-600 to-blue-500 bg-clip-text text-transparent">
                    AliMatrix
                  </span>
                </div>
              </a>
              <button
                type="button"
                onClick={() => setMobileMenuOpen(false)}
                className="-m-2.5 rounded-md p-2.5 text-gray-700"
              >
                <span className="sr-only">Zamknij menu</span>
                <XMarkIcon className="h-6 w-6" aria-hidden="true" />
              </button>
            </div>
            <div className="mt-6 flow-root">
              <div className="-my-6 divide-y divide-gray-500/10">
                <div className="space-y-2 py-6">
                  {navigation.map((item) => (
                    <a
                      key={item.name}
                      href={item.href}
                      className="-mx-3 block rounded-lg px-3 py-2 text-base/7 font-semibold text-gray-900 hover:bg-gray-50 hover:text-indigo-600 transition"
                    >
                      {item.name}
                    </a>
                  ))}
                </div>
                <div className="py-6 space-y-3">
                  <a
                    href="#"
                    className="-mx-3 block rounded-lg px-3 py-2.5 text-base/7 font-semibold text-gray-900 hover:bg-gray-50 hover:text-indigo-600 transition"
                  >
                    Logowanie
                  </a>
                  <a
                    href="#"
                    className="block rounded-lg px-3 py-2.5 text-base/7 font-semibold text-white bg-indigo-600 hover:bg-indigo-500 transition text-center mx-4"
                  >
                    Rozpocznij kalkulację
                  </a>
                </div>
              </div>
            </div>
          </Dialog.Panel>
        </Dialog>
      </header>

      {/* Hero section */}
      <main>
        <div className="relative isolate px-6 pt-14 lg:px-8">
          <div className="mx-auto max-w-7xl py-32 sm:py-48 lg:py-36">
            <div className="flex flex-col lg:flex-row items-center gap-12">
              {/* Hero content */}
              <div className="max-w-2xl">
                <motion.div
                  className="hidden sm:mb-8 sm:flex sm:justify-start"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <div className="relative rounded-full px-3 py-1 text-sm/6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20">
                    <span className="absolute inset-0 flex items-center justify-center animate-ping-slow opacity-75 rounded-full bg-indigo-400 h-1.5 w-1.5 left-3"></span>
                    <span className="relative ml-5">
                      Nowoczesne rozwiązanie prawne.{" "}
                      <a href="#" className="font-semibold text-indigo-600">
                        Dowiedz się więcej{" "}
                        <span aria-hidden="true">&rarr;</span>
                      </a>
                    </span>
                  </div>
                </motion.div>

                <motion.h1
                  className="text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl mb-6"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: 0.2 }}
                >
                  <span className="bg-gradient-to-r from-indigo-600 to-blue-500 bg-clip-text text-transparent">
                    Kompleksowe rozwiązanie
                  </span>
                  <br />
                  dla spraw alimentacyjnych
                </motion.h1>

                <motion.p
                  className="mt-6 text-lg text-gray-600 leading-8"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: 0.4 }}
                >
                  AliMatrix to zaawansowane narzędzie wspierające proces
                  kalkulacji alimentów. Wykorzystując dane statystyczne,
                  orzecznictwo sądów i aktualne przepisy prawa, zapewniamy
                  precyzyjne obliczenia i pełne wsparcie na każdym etapie
                  postępowania.
                </motion.p>

                <motion.div
                  className="mt-10 flex flex-col sm:flex-row gap-4"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: 0.6 }}
                >
                  <a
                    href="#"
                    className="rounded-lg bg-gradient-to-r from-indigo-600 to-blue-500 hover:from-indigo-500 hover:to-blue-400 px-4 py-2.5 text-sm font-semibold text-white shadow-lg shadow-indigo-500/20 hover:shadow-indigo-500/30 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-all duration-300 text-center min-w-40"
                  >
                    Rozpocznij kalkulację
                  </a>
                  <a
                    href="#"
                    className="rounded-lg bg-white px-4 py-2.5 text-sm font-semibold text-gray-800 shadow-md ring-1 ring-gray-200 hover:bg-gray-50 hover:ring-gray-300 transition-all duration-300 text-center flex items-center justify-center gap-2 min-w-40"
                  >
                    Zobacz jak to działa
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth={1.5}
                      stroke="currentColor"
                      className="w-4 h-4"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347c-.75.412-1.667-.13-1.667-.986V5.653Z"
                      />
                    </svg>
                  </a>
                </motion.div>

                {/* Trust indicators */}
                <motion.div
                  className="mt-12 flex flex-col sm:flex-row items-center gap-6"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: 0.8 }}
                >
                  <div className="flex -space-x-1 overflow-hidden">
                    {[...Array(5)].map((_, i) => (
                      <img
                        key={i}
                        className="inline-block h-8 w-8 rounded-full ring-2 ring-white"
                        src={`https://i.pravatar.cc/100?img=${30 + i}`}
                        alt=""
                      />
                    ))}
                  </div>
                  <div className="text-sm text-gray-500">
                    <span className="text-indigo-600 font-semibold">4.9/5</span>{" "}
                    na podstawie <span className="font-medium">2,134</span>{" "}
                    opinii klientów i prawników
                  </div>
                </motion.div>
              </div>

              {/* Hero illustration */}
              <motion.div
                className="relative lg:flex-1"
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.8, delay: 0.5 }}
              >
                <div className="relative w-full aspect-square max-w-md mx-auto">
                  {/* Dashboard mockup */}
                  <div className="absolute inset-0 rounded-2xl bg-white shadow-2xl border border-gray-200 overflow-hidden">
                    {/* Mockup header */}
                    <div className="h-12 bg-gradient-to-r from-indigo-600 to-blue-500 flex items-center px-4">
                      <div className="flex space-x-2">
                        <div className="h-3 w-3 rounded-full bg-red-400"></div>
                        <div className="h-3 w-3 rounded-full bg-yellow-400"></div>
                        <div className="h-3 w-3 rounded-full bg-green-400"></div>
                      </div>
                      <div className="mx-auto bg-white/20 rounded-md px-3 py-1 text-xs text-white">
                        Kalkulator alimentów - AliMatrix
                      </div>
                    </div>

                    {/* Mockup content */}
                    <div className="p-4">
                      <div className="flex mb-4 gap-4">
                        <div className="h-10 flex-1 rounded-md bg-indigo-50 animate-pulse"></div>
                        <div className="h-10 w-32 rounded-md bg-indigo-100 animate-pulse"></div>
                      </div>

                      <div className="h-24 rounded-md bg-gray-50 mb-4 p-2 flex flex-col">
                        <div className="w-1/2 h-4 bg-gray-200 rounded mb-2"></div>
                        <div className="w-3/4 h-3 bg-gray-100 rounded mb-2"></div>
                        <div className="w-2/3 h-3 bg-gray-100 rounded"></div>
                      </div>

                      <div className="mb-4 grid grid-cols-3 gap-3">
                        {features.map((feature, index) => (
                          <div
                            key={feature.name}
                            className="p-3 rounded-lg bg-gradient-to-br from-white to-indigo-50 shadow-sm border border-indigo-100/50"
                          >
                            <feature.icon className="h-5 w-5 text-indigo-500 mb-1" />
                            <div className="text-xs font-medium text-gray-800">
                              {feature.name}
                            </div>
                          </div>
                        ))}
                      </div>

                      <div className="space-y-3">
                        <div className="h-12 rounded-md bg-indigo-500/10 flex items-center px-3">
                          <div className="w-5 h-5 rounded bg-indigo-200 mr-3"></div>
                          <div className="h-3 w-1/2 bg-indigo-200 rounded"></div>
                          <div className="ml-auto h-5 w-12 rounded-md bg-indigo-500"></div>
                        </div>
                        <div className="h-12 rounded-md bg-gray-100 animate-pulse"></div>
                        <div className="h-12 rounded-md bg-gray-100 animate-pulse"></div>
                      </div>

                      {/* Interactive element */}
                      <div className="mt-6 relative">
                        <div className="absolute inset-0 bg-indigo-600/20 animate-pulse rounded-md flex items-center justify-center">
                          <span className="text-xs font-medium text-indigo-800">
                            Kalkulacja w toku...
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* Decorative elements */}
                  <div className="absolute -bottom-4 -right-4 h-24 w-24 rounded-full bg-indigo-100 -z-10"></div>
                  <div className="absolute -top-4 -left-4 h-16 w-16 rounded-full bg-blue-100 -z-10"></div>
                  <div className="absolute top-1/4 -right-6 h-12 w-12 rounded-full bg-cyan-100 -z-10"></div>
                </div>
              </motion.div>
            </div>

            {/* Features highlight */}
            <motion.div
              className="mt-24 grid grid-cols-1 sm:grid-cols-3 gap-8"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.7 }}
            >
              {features.map((feature) => (
                <div
                  key={feature.name}
                  className="relative p-6 rounded-xl bg-white shadow-md border border-gray-100 hover:shadow-lg hover:border-indigo-100 transition-all duration-300"
                >
                  <div className="absolute -top-4 -left-4 p-3 rounded-xl bg-gradient-to-br from-indigo-600 to-blue-500 text-white">
                    <feature.icon className="h-6 w-6" />
                  </div>
                  <h3 className="mt-4 font-semibold text-gray-900 text-lg">
                    {feature.name}
                  </h3>
                  <p className="mt-2 text-gray-600">{feature.description}</p>
                </div>
              ))}
            </motion.div>

            {/* Stats counter */}
            <motion.div
              className="mt-20 py-10 grid grid-cols-2 md:grid-cols-4 gap-8 border-y border-gray-200"
              initial={{ opacity: 0, y: 40 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.9 }}
            >
              {[
                { value: "10k+", label: "Wykonanych kalkulacji" },
                { value: "98%", label: "Dokładność obliczeń" },
                { value: "300+", label: "Prawników korzysta" },
                { value: "24/7", label: "Wsparcie eksperckie" },
              ].map((stat, index) => (
                <div key={index} className="text-center">
                  <div className="text-3xl font-bold text-indigo-600">
                    {stat.value}
                  </div>
                  <div className="text-sm text-gray-500 mt-1">{stat.label}</div>
                </div>
              ))}
            </motion.div>
          </div>
        </div>
      </main>

      {/* Floating CTA */}
      <div className="fixed bottom-6 right-6 z-30">
        <motion.div
          className="flex items-center space-x-2 bg-gradient-to-r from-indigo-600 to-blue-500 text-white px-4 py-3 rounded-full shadow-lg cursor-pointer hover:shadow-xl transition-all"
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 2, duration: 0.5 }}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth={1.5}
            stroke="currentColor"
            className="w-5 h-5"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09Z"
            />
          </svg>
          <span className="font-medium text-sm">Rozpocznij teraz</span>
        </motion.div>
      </div>

      <style jsx global>{`
        @keyframes ping-slow {
          0% {
            transform: scale(1);
            opacity: 1;
          }
          75%,
          100% {
            transform: scale(2);
            opacity: 0;
          }
        }
        .animate-ping-slow {
          animation: ping-slow 2s cubic-bezier(0, 0, 0.2, 1) infinite;
        }
      `}</style>
    </div>
  );
}
